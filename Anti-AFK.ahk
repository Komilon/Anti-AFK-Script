#Requires AutoHotkey v2.0
#SingleInstance Force

; –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
if ProcessExist("AutoHotkey.exe") {
    existingProcesses := ""
    for process in ComObjGet("winmgmts:").ExecQuery("Select * from Win32_Process where Name='AutoHotkey.exe'") {
        try {
            cmdLine := process.CommandLine
            if InStr(cmdLine, A_ScriptName) && process.ProcessId != DllCall("GetCurrentProcessId") {
                MsgBox("–°–∫—Ä–∏–ø—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!`n–ó–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–µ—Ä—Å–∏—é –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–æ–≤–æ–π.", "Anti-AFK", "Icon!")
                ExitApp
            }
        }
    }
}

AppName := "Anti-AFK Pro"
Version := "1.0.0"

; –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
Interval := 1000
DarkMode := true
Transparency := 255
IsTimerActive := false
TimeLeft := 1.0
KeyToPress := "w"
SendMethod := "Send"
Theme := "Dark"
AutoShutdownTime := 0
StartTime := 0
PressCount := 0
AntiDetect := false
AutoShutdownEnabled := false

; –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
Stats := Map()
Stats["TotalPresses"] := 0
Stats["TotalTime"] := 0
Stats["Sessions"] := 0

; –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ GUI
global KeyDisplay, ProgressText, StatusText, StatsText, StartBtn, StopBtn, SettingsBtn, TitleText

MyGui := Gui()
ApplyTheme()

ApplyTheme() {
    global MyGui, Theme, TextColor, ButtonStyle, BgColor, ProgressBgColor
    
    if (Theme = "Dark") {
        BgColor := "0x1E1E1E"
        TextColor := "cWhite"
        ButtonStyle := "Background0x404040 cWhite"
        ProgressBgColor := "0x404040"
    } else if (Theme = "Blue") {
        BgColor := "0x1E3A5F"
        TextColor := "cWhite"
        ButtonStyle := "Background0x2E5A8F cWhite"
        ProgressBgColor := "0x2E5A8F"
    } else if (Theme = "Green") {
        BgColor := "0x2D4A32"
        TextColor := "cWhite"
        ButtonStyle := "Background0x3D5A42 cWhite"
        ProgressBgColor := "0x3D5A42"
    } else if (Theme = "Purple") {
        BgColor := "0x4A235A"
        TextColor := "cWhite"
        ButtonStyle := "Background0x5B336B cWhite"
        ProgressBgColor := "0x5B336B"
    } else if (Theme = "Red") {
        BgColor := "0x5A2323"
        TextColor := "cWhite"
        ButtonStyle := "Background0x6B3333 cWhite"
        ProgressBgColor := "0x6B3333"
    } else if (Theme = "Orange") {
        BgColor := "0x7D5A2D"
        TextColor := "cWhite"
        ButtonStyle := "Background0x8D6A3D cWhite"
        ProgressBgColor := "0x8D6A3D"
    } else if (Theme = "Cyber") {
        BgColor := "0x0A0A12"
        TextColor := "cLime"
        ButtonStyle := "Background0x00FF88 cBlack"
        ProgressBgColor := "0x00FF88"
    } else if (Theme = "Light") {
        BgColor := "0xFFFFFF"
        TextColor := "cBlack"  ; –ß—ë—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        ButtonStyle := "Background0xE0E0E0 cBlack"
        ProgressBgColor := "0xE0E0E0"
    }
    
    if (MyGui.Hwnd) {
        MyGui.BackColor := BgColor
        ; –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        UpdateMainWindowColors()
    }
}

; –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
UpdateMainWindowColors() {
    global MyGui, TextColor, KeyDisplay, ProgressText, StatusText, StatsText, StartBtn, StopBtn, SettingsBtn, TitleText
    
    ; –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ–±–Ω–æ–≤–ª—è—Ç—å –∏—Ö
    try {
        if (TitleText.Hwnd)
            TitleText.Opt(TextColor)
        if (KeyDisplay.Hwnd)
            KeyDisplay.Opt(TextColor)
        if (ProgressText.Hwnd)
            ProgressText.Opt(TextColor)
        if (StatusText.Hwnd)
            StatusText.Opt(TextColor)
        if (StatsText.Hwnd)
            StatsText.Opt(TextColor)
    }
}

UpdateGUI() {
    global MyGui, TextColor, ButtonStyle, BgColor
    MyGui.BackColor := BgColor
    UpdateMainWindowColors()
}

MyGui.Title := AppName " v" Version
MyGui.BackColor := BgColor
MyGui.SetFont("s9 Bold", "Segoe UI")

TitleText := MyGui.Add("Text", "x20 y20 w300 h30 " TextColor, "üïπÔ∏è Anti-AFK Pro")
MyGui.SetFont("s8 Norm", "Segoe UI")
KeyDisplay := MyGui.Add("Text", "x20 y45 w300 " TextColor, "–ù–∞–∂–∏–º–∞–µ—Ç " KeyToPress " –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É")

ProgressText := MyGui.Add("Text", "x20 y75 w300 " TextColor, "–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–∂–∞—Ç–∏—è: 1.0s")
ProgressBar := MyGui.Add("Progress", "x20 y95 w310 h6 cGreen Background" ProgressBgColor " Smooth Range0-100", 100)

StatusText := MyGui.Add("Text", "x20 y115 w300 " TextColor, "‚óè –û–°–¢–ê–ù–û–í–õ–ï–ù–û")

; –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
StatsText := MyGui.Add("Text", "x20 y140 w300 " TextColor, "–ù–∞–∂–∞—Ç–∏–π: 0 | –í—Ä–µ–º—è: 0:00")

StartBtn := MyGui.Add("Button", "x20 y165 w90 h30 " ButtonStyle, "‚ñ∂ –°—Ç–∞—Ä—Ç")
StopBtn := MyGui.Add("Button", "x120 y165 w90 h30 " ButtonStyle, "‚èπ –°—Ç–æ–ø")
SettingsBtn := MyGui.Add("Button", "x220 y165 w90 h30 " ButtonStyle, "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

PressKey() {
    global TimeLeft, Interval, KeyToPress, SendMethod, PressCount, Stats, AntiDetect
    
    ; –ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç: —Å–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    actualInterval := Interval
    if (AntiDetect) {
        ; –°–ª—É—á–∞–π–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç -1000ms –¥–æ +1000ms
        randomDeviation := Random(-1000, 1000)
        actualInterval := Interval + randomDeviation
        if (actualInterval < 500) ; –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª 500ms
            actualInterval := 500
    }
    
    if (SendMethod = "Send") {
        Send("{" KeyToPress " down}")
        Sleep(30)
        Send("{" KeyToPress " up}")
    } else if (SendMethod = "SendInput") {
        SendInput("{" KeyToPress " down}")
        Sleep(30)
        SendInput("{" KeyToPress " up}")
    } else if (SendMethod = "SendEvent") {
        SendEvent("{" KeyToPress " down}")
        Sleep(30)
        SendEvent("{" KeyToPress " up}")
    }
    
    PressCount++
    Stats["TotalPresses"]++
    TimeLeft := actualInterval / 1000
    UpdateProgress()
    UpdateStats()
}

UpdateProgress() {
    global ProgressBar, ProgressText, TimeLeft, Interval
    ProgressBar.Value := (TimeLeft * 1000 / Interval) * 100
    ProgressText.Text := "–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–∂–∞—Ç–∏—è: " Round(TimeLeft, 1) "s"
}

UpdateStats() {
    global StatsText, PressCount, StartTime, Stats
    
    if (StartTime > 0) {
        elapsed := A_TickCount - StartTime
        Stats["TotalTime"] := Stats["TotalTime"] + (elapsed // 1000)
        minutes := (elapsed // 60000)
        seconds := Mod((elapsed // 1000), 60)
        StatsText.Text := "–ù–∞–∂–∞—Ç–∏–π: " PressCount " | –í—Ä–µ–º—è: " minutes ":" Format("{:02}", seconds)
    } else {
        StatsText.Text := "–ù–∞–∂–∞—Ç–∏–π: " PressCount " | –í—Ä–µ–º—è: 0:00"
    }
}

SetTimer(MainTimer, 100)

MainTimer() {
    global TimeLeft, IsTimerActive, Interval, StartTime, AutoShutdownTime, AutoShutdownEnabled
    
    if (IsTimerActive) {
        TimeLeft -= 0.1
        if (TimeLeft <= 0) {
            PressKey()
        }
        UpdateProgress()
        UpdateStats()
        
        ; –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏—è
        if (AutoShutdownEnabled && AutoShutdownTime > 0 && StartTime > 0) {
            elapsed := A_TickCount - StartTime
            if (elapsed >= AutoShutdownTime * 60 * 1000) {
                StopAFK()
                TrayTip("Anti-AFK", "–ê–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ: –ø—Ä–æ—à–ª–æ " AutoShutdownTime " –º–∏–Ω—É—Ç", 1)
            }
        }
    }
}

StartAFK(*) {
    global IsTimerActive, StatusText, StartBtn, StopBtn, StartTime, PressCount, Stats
    
    if (!IsTimerActive) {
        IsTimerActive := true
        StartTime := A_TickCount
        PressCount := 0
        Stats["Sessions"]++
        StatusText.Text := "‚óè –ê–ö–¢–ò–í–ù–û - " KeyToPress " –∫–∞–∂–¥—É—é " (Interval/1000) "—Å–µ–∫"
        StatusText.Opt("cLime")
        StartBtn.Enabled := false
        StopBtn.Enabled := true
    }
}

StopAFK(*) {
    global IsTimerActive, StatusText, StartBtn, StopBtn, TimeLeft, Interval, StartTime, Stats
    
    if (IsTimerActive) {
        IsTimerActive := false
        if (StartTime > 0) {
            elapsed := A_TickCount - StartTime
            Stats["TotalTime"] := Stats["TotalTime"] + (elapsed // 1000)
            StartTime := 0
        }
        StatusText.Text := "‚óè –û–°–¢–ê–ù–û–í–õ–ï–ù–û"
        StatusText.Opt("cRed")
        StartBtn.Enabled := true
        StopBtn.Enabled := false
        TimeLeft := Interval / 1000
        UpdateProgress()
        UpdateStats()
    }
}

ShowSettings(*) {
    global Interval, Transparency, MyGui, KeyToPress, SendMethod, Theme, AutoShutdownTime, AntiDetect, AutoShutdownEnabled
    
    ; –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
    MyGui.Hide()
    
    SettingsGui := Gui()
    SettingsGui.Title := "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Anti-AFK"
    SettingsGui.BackColor := "0x1E1E1E"
    SettingsGui.SetFont("s9 cWhite", "Segoe UI")
    SettingsGui.MarginX := 20
    SettingsGui.MarginY := 15
    
    ; –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    SettingsGui.SetFont("s11 Bold", "Segoe UI")
    MainSettingsTitle := SettingsGui.Add("Text", "x20 y20 w400 Section", "üîß –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    MainSettingsTitle.Opt("cYellow")
    SettingsGui.SetFont("s9 Norm cWhite", "Segoe UI")
    
    ; –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è
    SettingsGui.Add("Text", "xs y+15 w300", "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è:")
    KeyDropDown := SettingsGui.Add("DropDownList", "xs y+5 w120", ["w", "a", "s", "d", "Space", "Shift", "Ctrl", "Tab", "Enter"])
    KeyDropDown.Value := GetIndex(["w", "a", "s", "d", "Space", "Shift", "Ctrl", "Tab", "Enter"], KeyToPress)
    KeyInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    KeyInfoBtn.OnEvent("Click", (*) => ShowKeyInfo())
    
    ; –¢–∏–ø —ç–º—É–ª—è—Ü–∏–∏
    SettingsGui.Add("Text", "xs y+15 w300", "–¢–∏–ø —ç–º—É–ª—è—Ü–∏–∏:")
    SendMethodDropDown := SettingsGui.Add("DropDownList", "xs y+5 w120", ["Send", "SendInput", "SendEvent"])
    SendMethodDropDown.Value := GetIndex(["Send", "SendInput", "SendEvent"], SendMethod)
    SendMethodInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    SendMethodInfoBtn.OnEvent("Click", ShowSendModeInfo)
    
    ; –ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–∂–∞—Ç–∏—è
    SettingsGui.Add("Text", "xs y+15 w300", "–ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–∂–∞—Ç–∏—è (—Å–µ–∫—É–Ω–¥—ã):")
    IntervalEdit := SettingsGui.Add("Edit", "xs y+5 w120 BackgroundWhite cBlack Number", Interval/1000)
    IntervalEdit.Value := Interval/1000
    IntervalInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    IntervalInfoBtn.OnEvent("Click", (*) => ShowIntervalInfo())
    
    ; –†–∞–∑–¥–µ–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    SettingsGui.SetFont("s11 Bold", "Segoe UI")
    SecurityTitle := SettingsGui.Add("Text", "xs y+25 w400 Section", "üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
    SecurityTitle.Opt("cLime")
    SettingsGui.SetFont("s9 Norm cWhite", "Segoe UI")
    
    ; –ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç
    AntiDetectCheck := SettingsGui.Add("CheckBox", "xs y+10 Checked" AntiDetect, "–ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç —Ä–µ–∂–∏–º")
    AntiDetectCheck.Value := AntiDetect
    AntiDetectInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    AntiDetectInfoBtn.OnEvent("Click", (*) => ShowAntiDetectInfo())
    
    ; –†–∞–∑–¥–µ–ª —É–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    SettingsGui.SetFont("s11 Bold", "Segoe UI")
    SmartFunctionsTitle := SettingsGui.Add("Text", "xs y+25 w400 Section", "üß† –£–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    SmartFunctionsTitle.Opt("cAqua")
    SettingsGui.SetFont("s9 Norm cWhite", "Segoe UI")
    
    ; –ê–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º
    AutoShutdownSection := SettingsGui.Add("Text", "xs y+10 w400") ; –ù–µ–≤–∏–¥–∏–º—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
    
    AutoShutdownCheck := SettingsGui.Add("CheckBox", "xp yp w130 Checked" AutoShutdownEnabled, "–ê–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ")
    AutoShutdownCheck.Value := AutoShutdownEnabled
    
    ; –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è/—Å–∫—Ä—ã–≤–∞—Ç—å—Å—è
    AutoShutdownText := SettingsGui.Add("Text", "x+5 yp+3 w35 cWhite", "—á–µ—Ä–µ–∑:")
    AutoShutdownEdit := SettingsGui.Add("Edit", "x+5 yp-3 w50 BackgroundWhite cBlack Number", AutoShutdownTime)
    AutoShutdownEdit.Value := AutoShutdownTime
    AutoShutdownMinutesText := SettingsGui.Add("Text", "x+5 yp+3 w25 cWhite", "–º–∏–Ω.")
    AutoShutdownInfoBtn := SettingsGui.Add("Button", "x+5 yp-3 w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    AutoShutdownInfoBtn.OnEvent("Click", (*) => ShowAutoShutdownInfo())
    
    ; –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    ToggleAutoShutdownEdit(*) {
        AutoShutdownText.Visible := AutoShutdownCheck.Value
        AutoShutdownEdit.Visible := AutoShutdownCheck.Value
        AutoShutdownMinutesText.Visible := AutoShutdownCheck.Value
        AutoShutdownInfoBtn.Visible := AutoShutdownCheck.Value
    }
    
    AutoShutdownCheck.OnEvent("Click", ToggleAutoShutdownEdit)
    ToggleAutoShutdownEdit() ; –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
    
    ; –†–∞–∑–¥–µ–ª –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    SettingsGui.SetFont("s11 Bold", "Segoe UI")
    PersonalizationTitle := SettingsGui.Add("Text", "xs y+25 w400 Section", "üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è")
    PersonalizationTitle.Opt("cFuchsia")
    SettingsGui.SetFont("s9 Norm cWhite", "Segoe UI")
    
    ; –¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    SettingsGui.Add("Text", "xs y+10 w300", "–¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
    ThemeDropDown := SettingsGui.Add("DropDownList", "xs y+5 w120", ["Dark", "Blue", "Green", "Purple", "Red", "Orange", "Cyber", "Light"])
    ThemeDropDown.Value := GetIndex(["Dark", "Blue", "Green", "Purple", "Red", "Orange", "Cyber", "Light"], Theme)
    ThemeInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    ThemeInfoBtn.OnEvent("Click", (*) => ShowThemeInfo())
    
    ; –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
    SettingsGui.Add("Text", "xs y+15 w300", "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ–∫–Ω–∞ (%):")
    TransparencySlider := SettingsGui.Add("Slider", "xs y+5 w120 Range20-100 ToolTip", Round(Transparency/255*100))
    TransparencyValue := SettingsGui.Add("Text", "x+10 yp w40 cWhite", Round(Transparency/255*100) "%")
    TransparencySlider.OnEvent("Change", (*) => TransparencyValue.Text := TransparencySlider.Value "%")
    TransparencyInfoBtn := SettingsGui.Add("Button", "x+10 yp w30 h23 Background0x87CEEB cWhite", "‚Ñπ")
    TransparencyInfoBtn.OnEvent("Click", (*) => ShowTransparencyInfo())
    
    ; –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –≤–Ω–∏–∑—É
    SettingsGui.SetFont("s9 Bold", "Segoe UI")
    NoteText := SettingsGui.Add("Text", "xs y+30 w400 Center", "üí° –§—É–Ω–∫—Ü–∏–π –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –±—É–¥–µ—Ç –±–æ–ª—å—à–µ!")
    NoteText.Opt("cSilver")
    
    ; –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    ApplyBtn := SettingsGui.Add("Button", "xs y+20 w80 Background0x404040 cWhite", "–ü—Ä–∏–º–µ–Ω–∏—Ç—å")
    CancelBtn := SettingsGui.Add("Button", "x+20 yp w80 Background0x404040 cWhite", "–û—Ç–º–µ–Ω–∞")
    
    ApplyBtn.OnEvent("Click", ApplySettings)
    CancelBtn.OnEvent("Click", CancelSettings)
    
    ; –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    SettingsGui.OnEvent("Close", CancelSettings)
    SettingsGui.OnEvent("Escape", CancelSettings)
    
    ApplySettings(*) {
        global Interval, Transparency, IsTimerActive, TimeLeft, KeyToPress, SendMethod, Theme, AutoShutdownTime, AntiDetect, AutoShutdownEnabled
        
        ; –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ
        if IntervalEdit.Value = "" or not IsNumber(IntervalEdit.Value) {
            MsgBox("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞!", "–û—à–∏–±–∫–∞", "Icon!")
            return
        }
        
        KeyToPress := KeyDropDown.Text
        SendMethod := SendMethodDropDown.Text
        Interval := IntervalEdit.Value * 1000
        Transparency := Round(TransparencySlider.Value * 2.55)
        Theme := ThemeDropDown.Text
        AutoShutdownEnabled := AutoShutdownCheck.Value
        AutoShutdownTime := AutoShutdownEdit.Value
        AntiDetect := AntiDetectCheck.Value
        
        ; –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        WinSetTransparent(Transparency, MyGui)
        ApplyTheme()
        UpdateGUI()
        KeyDisplay.Text := "–ù–∞–∂–∏–º–∞–µ—Ç " KeyToPress " –∫–∞–∂–¥—É—é " (Interval/1000) " —Å–µ–∫—É–Ω–¥—É"
        
        if (IsTimerActive) {
            TimeLeft := Interval / 1000
            StatusText.Text := "‚óè –ê–ö–¢–ò–í–ù–û - " KeyToPress " –∫–∞–∂–¥—É—é " (Interval/1000) "—Å–µ–∫"
            UpdateProgress()
        } else {
            TimeLeft := Interval / 1000
            UpdateProgress()
        }
        
        SettingsGui.Destroy()
        MyGui.Show()
        TrayTip("Anti-AFK", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!", 1)
    }
    
    CancelSettings(*) {
        SettingsGui.Destroy()
        MyGui.Show()
    }
    
    SettingsGui.Show()
}

; –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
ShowKeyInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üéÆ –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏—à—É, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –Ω–∞–∂–∏–º–∞—Ç—å —Å–∫—Ä–∏–ø—Ç.")
    InfoGui.Add("Text", "w400 cGray", "‚Ä¢ W, A, S, D - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏ –¥–≤–∏–∂–µ–Ω–∏—è`n‚Ä¢ Space - –ø—Ä–æ–±–µ–ª`n‚Ä¢ Shift, Ctrl - –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã`n‚Ä¢ Tab, Enter - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

ShowIntervalInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–∂–∞—Ç–∏—è"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–∂–∞—Ç–∏—è")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –Ω–∞–∂–∞—Ç–∏—è–º–∏ –∫–ª–∞–≤–∏—à–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.")
    InfoGui.Add("Text", "w400 cGray", "‚Ä¢ 1.0 = 1 —Å–µ–∫—É–Ω–¥–∞`n‚Ä¢ 0.5 = 500 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥`n‚Ä¢ 2.0 = 2 —Å–µ–∫—É–Ω–¥—ã`n‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 1.0-5.0 —Å–µ–∫—É–Ω–¥")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

ShowAntiDetectInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç —Ä–µ–∂–∏–º"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üõ°Ô∏è –ê–Ω—Ç–∏-–¥–µ—Ç–µ–∫—Ç —Ä–µ–∂–∏–º")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–≤–∞–ª—É –Ω–∞–∂–∞—Ç–∏–π.")
    InfoGui.Add("Text", "w400 cGray", "‚úì –°–ª—É—á–∞–π–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç -1 –¥–æ +1 —Å–µ–∫—É–Ω–¥—ã`n‚úì –ú–µ–Ω—å—à–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –±–æ—Ç–∞`n‚úì –°–ª–æ–∂–Ω–µ–µ –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å`n‚ö†Ô∏è –ú–µ–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

ShowAutoShutdownInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–ê–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "‚è∞ –ê–≤—Ç–æ–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")
    InfoGui.Add("Text", "w400 cGray", "‚Ä¢ 0 = —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞`n‚Ä¢ 30 = –æ—Ç–∫–ª—é—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç`n‚Ä¢ 60 = –æ—Ç–∫–ª—é—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 1 —á–∞—Å`n‚Ä¢ –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

ShowThemeInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–¢–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üé® –¢–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.")
    InfoGui.Add("Text", "w400 cGray", "‚Ä¢ Dark - —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞`n‚Ä¢ Light - —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞`n‚Ä¢ Blue, Green, Purple - —Ü–≤–µ—Ç–Ω—ã–µ —Ç–µ–º—ã`n‚Ä¢ Cyber - –Ω–µ–æ–Ω–æ–≤–∞—è –∑–µ–ª—ë–Ω–∞—è`n‚Ä¢ Red, Orange - —Ç—ë–ø–ª—ã–µ —Ç–µ–º—ã")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

ShowTransparencyInfo() {
    InfoGui := Gui()
    InfoGui.Title := "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ–∫–Ω–∞"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üîç –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ–∫–Ω–∞")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    InfoGui.Add("Text", "w400", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞.")
    InfoGui.Add("Text", "w400 cGray", "‚Ä¢ 100% = –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ`n‚Ä¢ 50% = –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ`n‚Ä¢ 20% = –ø–æ—á—Ç–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ`n‚Ä¢ –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö –æ–∫–æ–Ω")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    InfoGui.Show()
}

; –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∏–ø–∞—Ö —ç–º—É–ª—è—Ü–∏–∏
ShowSendModeInfo(*) {
    InfoGui := Gui()
    InfoGui.Title := "–¢–∏–ø—ã —ç–º—É–ª—è—Ü–∏–∏ –∫–ª–∞–≤–∏—à"
    InfoGui.BackColor := "0x1E1E1E"
    InfoGui.MarginX := 20
    InfoGui.MarginY := 15
    
    ; –ó–∞–≥–æ–ª–æ–≤–æ–∫
    InfoGui.SetFont("s10 Bold cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üìã –¢–∏–ø—ã —ç–º—É–ª—è—Ü–∏–∏ –∫–ª–∞–≤–∏—à")
    
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", " ")
    
    ; Send
    InfoGui.SetFont("s9 Bold cLime", "Segoe UI")
    InfoGui.Add("Text", "w400 Section", "‚Ä¢ Send")
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥, —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤")
    InfoGui.Add("Text", "w400 cGray", "‚úì –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π`n‚è±Ô∏è –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å`nüõ°Ô∏è –•–æ—Ä–æ—à–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")
    InfoGui.Add("Text", "w400", " ")
    
    ; SendInput
    InfoGui.SetFont("s9 Bold cYellow", "Segoe UI")
    InfoGui.Add("Text", "w400 Section", "‚Ä¢ SendInput")
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", "–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –º–µ—Ç–æ–¥, –Ω–æ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∏–≥—Ä–∞—Ö")
    InfoGui.Add("Text", "w400 cGray", "‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å`nüéØ –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è`n‚ö†Ô∏è –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∏–≥—Ä–∞–º–∏")
    InfoGui.Add("Text", "w400", " ")
    
    ; SendEvent
    InfoGui.SetFont("s9 Bold cAqua", "Segoe UI")
    InfoGui.Add("Text", "w400 Section", "‚Ä¢ SendEvent")
    InfoGui.SetFont("s9 Norm cWhite", "Segoe UI")
    InfoGui.Add("Text", "w400", "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –∏–≥—Ä, –±–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏")
    InfoGui.Add("Text", "w400 cGray", "üéÆ –õ—É—á—à–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –∏–≥—Ä–∞–º–∏`n‚ö° –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å`nüõ°Ô∏è –ù–∞–¥–µ–∂–Ω—ã–π")
    InfoGui.Add("Text", "w400", " ")
    
    InfoGui.SetFont("s9 Bold cSilver", "Segoe UI")
    InfoGui.Add("Text", "w400 Center", "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—á–Ω–∏—Ç–µ —Å SendEvent –¥–ª—è –∏–≥—Ä")
    
    CloseBtn := InfoGui.Add("Button", "w100 Center Background0x404040 cWhite", "–ó–∞–∫—Ä—ã—Ç—å")
    CloseBtn.OnEvent("Click", (*) => InfoGui.Destroy())
    
    InfoGui.OnEvent("Close", (*) => InfoGui.Destroy())
    InfoGui.OnEvent("Escape", (*) => InfoGui.Destroy())
    
    InfoGui.Show()
}

; –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –≤ —Å–ø–∏—Å–∫–µ
GetIndex(list, value) {
    for index, item in list {
        if (item = value) {
            return index
        }
    }
    return 1
}

StartBtn.OnEvent("Click", StartAFK)
StopBtn.OnEvent("Click", StopAFK)
SettingsBtn.OnEvent("Click", ShowSettings)

F1::StartAFK()
F2::StopAFK()

MyGui.OnEvent("Close", (*) => ExitApp())
MyGui.OnEvent("Escape", (*) => ExitApp())

A_TrayMenu.Delete()
A_TrayMenu.Add("–û—Ç–∫—Ä—ã—Ç—å", (*) => MyGui.Show())
A_TrayMenu.Add("–°—Ç–∞—Ä—Ç", StartAFK)
A_TrayMenu.Add("–°—Ç–æ–ø", StopAFK)
A_TrayMenu.Add("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", ShowSettings)
A_TrayMenu.Add()
A_TrayMenu.Add("–í—ã—Ö–æ–¥", (*) => ExitApp())

MyGui.Show()
StopBtn.Enabled := false
UpdateProgress()
UpdateStats()